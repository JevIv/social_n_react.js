{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","Preloader","Post","item","src","alt","message","likesCount","MyPosts","memo","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.15cbcc91.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__30vK9\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__qr1Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__SynC7\",\"posts\":\"MyPosts_posts__3vPzx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__203Ej\"};","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component{\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"---NO-STATUS---\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={ this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n    )\r\n    }\r\n}\r\nexport default ProfileStatus;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n/*  let stateWithSetState = useState(false); //vozvra6aet massiv iz dvuh elementov\r\n    let editMode = stateWithSetState[0];\r\n    let SetEditMode = stateWithSetState[1];\r\n    */\r\n\r\n    let [editMode, setEditMode] = useState(false); // [zna4enie, func, kotoroij mozem menjatj eto zna4enie]\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { ! editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{ props.status || \"---NO-STATUS---\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) { //esli netu profile to->\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<div>\r\n                <img src=\"https://www.custom-wallpaper-printing.co.uk/custom/catalog/Howell/Tony-Howell-Z539-5016-8-Clifton-Suspension-Bridge-room.jpg\" alt=\"\"/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                {/*<img src={profile.photos.large} alt=\"\"/>*/}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n    return <div\r\n        className={s.item}>\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRaO2hiSp4nCSEmXcDvijRtsDcBH166buyhng&usqp=CAU\" alt=\"\"/>\r\n        {props.message}\r\n        <div>\r\n            {props.likesCount}\r\n            <span>Like</span>\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"../Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\"\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControl\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount} />);\r\n    let newPostElement = React.createRef();\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div className={ s.postsBlock }>\r\n    <h3>My posts</h3>\r\n    <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n    <div className={s.posts}>\r\n        { postsElements }\r\n    </div>\r\n</div>\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst  AddNewPostForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} placeholder=\"Enter your message\"/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n/*const MyPostsContainer = () => {\r\n    return <StoreContext.Consumer>\r\n        { store => {\r\n                let state = store.getState();\r\n                let addPost = () => {\r\n                    store.dispatch(addPostActionCreator());}\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);}\r\n                return <MyPosts\r\n                    updateNewPostText={onPostChange}\r\n                    addPost={addPost}\r\n                    posts={state.profilePage.posts}\r\n                    newPostText={state.profilePage.newPostText}\r\n                /> } }\r\n        </StoreContext.Consumer>\r\n}*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {updateStatus} from \"../../redux/profile-reducer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;//17676\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);\r\n"],"sourceRoot":""}