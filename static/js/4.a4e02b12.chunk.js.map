{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Messages/Messages.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogElements","dialogsData","map","messagesElements","messageData","newMessageBody","dialogs","dialogsItems","messages","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qJCG9KC,EAA6B,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,SAEpDE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAqCL,K,2FCA/DM,EAVI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAAST,GAAII,EAAb,SAAoBL,EAAMW,UCFvBC,EAJC,SAACZ,GACb,OAAO,qBAAKO,UAAWC,IAAEK,QAAlB,SAA4Bb,EAAMa,W,yCCEvCC,EAAcC,YAAiB,IAiBxBC,EAAqBC,YAAU,CAACC,KAAM,wBAAjBD,EAfX,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAM,iBACNe,YAAa,yBAGxB,8BAAK,kDCoBFC,EA9BC,SAAC3B,GAEb,IAAIP,EAAQO,EAAM4B,YAEdC,EAAiBpC,EAAMqC,YACtBC,KAAK,SAAAtB,GAAM,OAAG,cAAC,EAAD,CAAYE,KAAMF,EAAOE,KAAwBL,GAAIG,EAAOE,MAAxBF,EAAOE,SAC1DqB,EAAmBvC,EAAMwC,YACxBF,KAAK,SAAAlB,GAAO,OAAG,cAAC,EAAD,CAASA,QAASA,EAAQF,MAAWE,MACpCpB,EAAMyC,eAK3B,OAAKlC,EAAMN,OAEP,sBAAKa,UAAWC,IAAE2B,QAAlB,UACI,qBAAK5B,UAAWC,IAAE4B,aAAlB,SAEMP,IAGN,sBAAKtB,UAAWC,IAAE6B,SAAlB,UAEI,8BAAML,IACN,cAAChB,EAAD,CAAqBG,SAdb,SAACmB,GAClBtC,EAAMuC,YAAYD,EAAOJ,yBAEF,cAAC,IAAD,CAAUjC,GAAI,Y,wBCgB7BuC,sBACXrC,aAZkB,SAACV,GACnB,MAAO,CACHmC,YAAanC,EAAMmC,gBAGF,SAACa,GACtB,MAAO,CACHF,YAAa,SAACL,GAAoBO,EAASC,YAAmBR,SAMlEtC,IAFW4C,CAEOb","file":"static/js/4.a4e02b12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1zBJ2\",\"dialogsItems\":\"Dialogs_dialogsItems__FwHJF\",\"active\":\"Dialogs_active__2O6MZ\",\"messages\":\"Dialogs_messages__1OIfW\",\"message\":\"Dialogs_message__1qgaF\"};","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder={\"Enter your message\"}\r\n                />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux =reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Messages/Messages\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogsData\r\n        .map( dialog=> <DialogItem name={dialog.name} key={dialog.name} id={dialog.name} /> );\r\n    let messagesElements = state.messageData\r\n        .map( message=> <Message message={message.name} key={message} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let AddNewMessage = (values) => {\r\n       props.sendMessage(values.newMessageBody);\r\n    }\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                { dialogElements }\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={AddNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n/*const DialogsContainer = () => {\r\n\r\n    return <StoreContext.Consumer>\r\n        { store => {\r\n            let state = store.getState().dialogsPage;\r\n            let onSendMessageClick = () => {\r\n                store.dispatch(sendMessageCreator());}\r\n            let onNewMessageChange = (body) => {\r\n                store.dispatch(updateNewMessageBodyCreator(body));}\r\n            return <Dialogs\r\n                updateNewMessageBody={onNewMessageChange}\r\n                sendMessage={onSendMessageClick}\r\n                dialogsPage={state}/>\r\n        }\r\n    }\r\n    </StoreContext.Consumer>\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageCreator(newMessageBody))},\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);"],"sourceRoot":""}